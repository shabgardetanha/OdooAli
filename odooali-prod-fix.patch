diff --git a/.dockerignore b/.dockerignore
new file mode 100644
--- /dev/null
+++ b/.dockerignore
@@
+__pycache__
+*.pyc
+*.pyo
+*.db
+.env
+node_modules
+build
+.git
+.gitignore
+.DS_Store
diff --git a/Dockerfile.prod b/Dockerfile.prod
new file mode 100644
--- /dev/null
+++ b/Dockerfile.prod
@@
+# Backend Production Dockerfile
+FROM python:3.11-slim
+
+WORKDIR /app
+
+ENV PYTHONDONTWRITEBYTECODE 1
+ENV PYTHONUNBUFFERED 1
+
+COPY backend/requirements.txt .
+RUN pip install --no-cache-dir -r requirements.txt gunicorn
+
+COPY backend /app
+
+CMD ["gunicorn", "--bind", "0.0.0.0:8000", "myproject.wsgi:application"]
+
+EXPOSE 8000
diff --git a/frontend/Dockerfile.prod b/frontend/Dockerfile.prod
new file mode 100644
--- /dev/null
+++ b/frontend/Dockerfile.prod
@@
+# Frontend Production Dockerfile
+FROM node:18 as build
+
+WORKDIR /app
+COPY frontend/package*.json ./
+RUN npm install
+
+COPY frontend/ ./
+RUN npm run build
+
+FROM nginx:1.23-alpine
+COPY --from=build /app/build /usr/share/nginx/html
+COPY nginx.conf /etc/nginx/conf.d/default.conf
+
+EXPOSE 80
diff --git a/docker-compose.prod.yml b/docker-compose.prod.yml
new file mode 100644
--- /dev/null
+++ b/docker-compose.prod.yml
@@
+version: "3.9"
+
+services:
+  backend:
+    build:
+      context: .
+      dockerfile: Dockerfile.prod
+    env_file:
+      - .env
+    depends_on:
+      - db
+    restart: always
+
+  frontend:
+    build:
+      context: ./frontend
+      dockerfile: Dockerfile.prod
+    depends_on:
+      - backend
+    restart: always
+
+  db:
+    image: postgres:15
+    env_file:
+      - .env
+    volumes:
+      - postgres_data:/var/lib/postgresql/data
+    restart: always
+
+  nginx:
+    image: nginx:1.23-alpine
+    volumes:
+      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
+    ports:
+      - "80:80"
+    depends_on:
+      - backend
+      - frontend
+    restart: always
+
+volumes:
+  postgres_data:
diff --git a/nginx.conf b/nginx.conf
new file mode 100644
--- /dev/null
+++ b/nginx.conf
@@
+server {
+    listen 80;
+
+    server_name _;
+
+    location / {
+        root   /usr/share/nginx/html;
+        index  index.html index.htm;
+        try_files $uri /index.html;
+    }
+
+    location /api/ {
+        proxy_pass http://backend:8000/;
+        proxy_set_header Host $host;
+        proxy_set_header X-Real-IP $remote_addr;
+        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
+        proxy_set_header X-Forwarded-Proto $scheme;
+    }
+}
