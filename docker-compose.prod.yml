version: '3.9'

services:
  db:
    image: postgres:15
    container_name: django_db
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U odooali"]
      interval: 30s
      timeout: 10s
      retries: 5

  web:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: django_web
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - backend_logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: react_frontend
    expose:
      - "80"
    restart: unless-stopped
    depends_on:
      - web
    volumes:
      - frontend_logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: odooali_nginx
    ports:
      - "8080:80"
      - "443:443"
    volumes:
      - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
      - frontend_logs:/var/log/nginx
    depends_on:
      - web
      - frontend
    restart: unless-stopped

volumes:
  postgres_data:
  backend_logs:
  frontend_logs:
