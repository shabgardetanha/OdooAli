[tox]
envlist = py, lint, typecheck, fuzz, precommit, ci
skipsdist = True
skip_missing_interpreters = True

# -----------------------------
# Dynamic Python environments
# -----------------------------
[testenv]
description = Dynamic Python environment for running tests
setenv =
    PYTHONPATH = {toxinidir}/src
recreate = True
deps =
    -r{toxinidir}/test_requirements.txt
commands_pre =
    # Run lint and typecheck before tests
    tox -e lint
    tox -e typecheck
    coverage erase
commands =
    # Run non-Jupyter tests
    pytest tests --run-optional no_jupyter {posargs} \
        !ci: --numprocesses auto \
        ci: --numprocesses 1 \
        --cov=src --cov-report=term-missing

    # Run Jupyter tests
    pip install -e .[jupyter]
    pytest tests --run-optional jupyter -m jupyter {posargs} \
        !ci: --numprocesses auto \
        ci: --numprocesses 1 \
        --cov=src --cov-append

    # Final coverage report
    coverage report -m

# -----------------------------
# Fuzz testing
# -----------------------------
[testenv:fuzz]
description = Run fuzz testing
skip_install = False
deps =
    -r{toxinidir}/test_requirements.txt
    hypothesmith
    lark-parser
commands =
    pip install -e .[dev]
    coverage erase
    coverage run fuzz.py
    coverage report -m

# -----------------------------
# Linting
# -----------------------------
[testenv:lint]
description = Run linters (flake8, pylint, stylelint, eslint, prettier)
skip_install = True
deps =
    flake8
    pylint
    black
    isort
    stylelint
    prettier
    eslint
commands =
    flake8 src tests
    pylint src tests
    black --check src tests
    isort --check-only src tests
    stylelint "**/*.{css,scss,less}"
    eslint "src/**/*.{js,jsx,ts,tsx}"

# -----------------------------
# Type checking
# -----------------------------
[testenv:typecheck]
description = Run mypy type checking
skip_install = True
deps =
    mypy
commands =
    mypy src

# -----------------------------
# Pre-commit hooks
# -----------------------------
[testenv:precommit]
description = Run pre-commit hooks
skip_install = True
deps =
    pre-commit
commands =
    pre-commit run --all-files

# -----------------------------
# Continuous Integration
# -----------------------------
[testenv:ci]
description = CI environment (lint, typecheck, tests, coverage)
deps =
    -r{toxinidir}/test_requirements.txt
commands =
    pip install -e .[dev]
    # Run lint, typecheck, and tests in sequence
    tox -e lint
    tox -e typecheck
    coverage erase
    pytest tests --run-optional no_jupyter --numprocesses 1 --cov=src --cov-report=xml
    pip install -e .[jupyter]
    pytest tests --run-optional jupyter -m jupyter --numprocesses 1 --cov=src --cov-append
    coverage report -m
