[build-system]
requires = [
    "setuptools>=42",
    "wheel",
]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 120
target-version = ["py36", "py37", "py38"]
exclude='\.pyi?$'
include = '\.pyi?$'
quiet = false
preview = true

[tool.ruff]
# نسخه هدف Python
target-version = "py310"

# مسیرهایی که می‌خواهیم بررسی شوند
src = ["src", "tests"]

# فعال کردن قوانین اضافی
select = [
    "E",  # PEP8 Errors
    "F",  # Pyflakes
    "W",  # PEP8 Warnings
    "C90", # Complexity (McCabe)
    "D",  # Docstring rules
    "I",  # Import rules (جایگزین isort)
]

# غیرفعال کردن قواعد خاص
# لیست کامل قواعد در https://docs.astral.sh/ruff/rules
ignore = [
    "E501",  # خط طولانی (اگر Black استفاده می‌کنید، Ruff این را نادیده می‌گیرد)
    "D100"   # Missing docstring in public module
]
# حداکثر خط طول مجاز
line-length = 80

# قوانین سفارشی برای مسیرهای خاص
[tool.ruff.per-file-ignores]
"tests/*" = ["D101", "D102"]  # docstrings را در تست‌ها بررسی نکن
"src/migrations/*" = ["ALL"]  # همه قوانین را روی migrations نادیده بگیر

# اگر می‌خواهی Ruff به صورت خودکار اصلاح کند:
fix = true

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@overload",
]

[tool.mypy]
ignore_missing_imports = true
show_error_codes = true
exclude = "(build|data|dist|logo|logs|output)/"
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
no_implicit_reexport = true
strict_equality = true

[tool.pydocstyle]
convention = "google"
match_dir = "(datamodules|datasets|losses|models|samplers|torchgeo|trainers|transforms)"

[tool.isort]
# Ruff جایگزین isort می‌شود، اما اگر بخواهی برای هماهنگی می‌توانی تنظیمات زیر را نگه داری
profile = "hug"
skip_gitignore = true
line_length = 120
skip = [
    ".bzr", ".direnv", ".eggs", ".git", ".hg", ".mypy_cache", ".nox",
    ".pants.d", ".svn", ".tox", ".venv", "__pypackages__", "_build",
    "buck-out", "build", "dist", "node_modules", "venv", ".idea",
    ".vscode"
]
extend_skip = [
    ".md", ".json", ".js", ".txt", ".yml", ".ini", ".toml", "Dockerfile",
    ".gitignore", ".dockerignore", "babel.config.js", "jest.config.js",
    "package.json", "README.md", "tsconfig.json", "codecov.yml",
    "package-lock.json", "requirements.txt", "webpack.config.js",
    "docker-compose.yml", "mypy.ini", "postcss.config.jsm",
    "webpack.development.js", "Dockerfile", "pyproject.toml", "tox.ini",
    "webpack.production.js"
]
skip_glob = ["docs/*", ".env/*"]
blocked_extensions = ["pyw", "pyc"]

[tool.pytest.ini_options]
addopts = "-m 'not slow'"
filterwarnings = [
    "ignore:.*is a deprecated alias for the builtin:DeprecationWarning",
    "ignore:.*Create unlinked descriptors is going to go away:DeprecationWarning",
    "ignore:Previous behaviour produces incorrect box coordinates:UserWarning",
    "ignore:The dataloader, .*, does not have many workers which may be a bottleneck:UserWarning",
    "ignore:GPU available but not used:UserWarning",
    "ignore:Your `.*_dataloader` has `shuffle=True`:UserWarning",
    "ignore:Trying to infer the `batch_size` from an ambiguous collection:UserWarning",
]
markers = ["slow: marks tests as slow"]
norecursedirs = [".ipynb_checkpoints", "data", "__pycache__"]
testpaths = ["tests", "docs/tutorials"]

[tool.djlint]
blank_line_after_tag = "load,extends,include"
exclude = ".venv"
ignore = "H014,H015,H030,H031"
indent = 4
max_attribute_length = 200
max_line_length = 100
profile = "django"
use_gitignore = true
